{"version":3,"sources":["images/logo.svg","components/Header.js","components/SingleArt.js","components/Gallery.js","components/Error.js","components/Slideshow.jsx","components/ArtPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","slideShow","setSlideShow","to","onClick","src","Logo","alt","SingleArt","id","thumbnail","name","artist","className","Gallery","data","map","art","Error","Slideshow","setFade","useParams","navigate","useNavigate","width","useEffect","slider","setTimeout","clearTimeout","style","content","position","background","height","viewBox","xmlns","stroke","fill","fillRule","d","strokeWidth","ArtPage","year","large","gallery","description","source","useState","isOpened","setIsOpened","fade","document","body","xlink","image","href","target","App","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"kMAAe,MAA0B,iC,OC0B1BA,MAvBf,YAA8C,IAA5BC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,aAC3B,OACE,gCACE,cAAC,IAAD,CACEC,GAAG,IACHC,QAAS,WACPF,GAAa,IAHjB,SAME,qBAAKG,IAAKC,EAAMC,IAAI,WAEtB,cAAC,IAAD,CACEJ,GAAKF,EAAuB,IAAX,SACjBG,QAAS,WACPF,GAAcD,IAHlB,SAME,mCAASA,EAAY,OAAS,QAA9B,sB,eCJOO,MAdf,YAAqD,IAAhCC,EAA+B,EAA/BA,GAAIC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,OACxC,OACE,cAAC,IAAD,CAAMT,GAAE,eAAUM,GAAlB,SACE,sBAAKI,UAAU,YAAf,UACE,qBAAKR,IAAKK,EAAWH,IAAKI,IAC1B,sBAAKE,UAAU,OAAf,UACE,6BAAKF,IACL,6BAAKC,EAAOD,gBCIPG,MAVf,WACE,OACE,yBAASD,UAAU,UAAnB,SACGE,EAAKC,KAAI,SAACC,GACT,OAAO,cAAC,EAAD,eAA4BA,GAAZA,EAAIR,UCIpBS,MATf,WACE,OACE,0BAASL,UAAU,QAAnB,UACE,8CACA,cAAC,IAAD,CAAMV,GAAG,IAAT,2BC8FSgB,MAhGf,YAA4C,IAAvBlB,EAAsB,EAAtBA,UAAWmB,EAAW,EAAXA,QACxBX,EAAOY,cAAPZ,GACFA,EAAK,KAAIA,EAAK,GACdA,EAAK,IAAGA,EAAK,IACjB,MAAyBM,EAAKN,GAAtBE,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACRU,EAAWC,cACbC,EAAQ,oBAAsBf,EAWlC,OATAgB,qBAAU,WACR,GAAIxB,EAAW,CACb,IAAMyB,EAASC,YAAW,WACxBL,EAAS,QAAD,QAAUb,EAAK,MACtB,KACH,OAAO,kBAAMmB,aAAaF,OAE3B,CAACzB,EAAWQ,EAAIa,IAGjB,0BAAST,UAAU,YAAnB,UACE,qBAAKA,UAAU,OAAf,SACE,qBACEgB,MAAO,CACLC,QAAS,GACTC,SAAU,WACVC,WAAY,OACZC,OAAQ,OACRT,MAAOA,EAAQ,SAIrB,gCACE,gCACE,mCAAMb,KACN,4BAAIC,EAAOD,UAEb,gCACE,wBACEP,QAAS,WACPkB,EAAS,QAAD,QAAUb,EAAK,IACvBW,EAAQ,SAHZ,SAME,qBACEI,MAAM,KACNS,OAAO,KACPC,QAAQ,YACRC,MAAM,6BAJR,SAME,oBAAGC,OAAO,UAAUC,KAAK,OAAOC,SAAS,UAAzC,UACE,sBACEC,EAAE,kDACFC,YAAY,MACZJ,OAAO,UACPC,KAAK,SAEP,sBACEA,KAAK,UACLE,EAAE,uBACFH,OAAO,mBAKf,wBACEhC,QAAS,WACPkB,EAAS,QAAD,QAAUb,EAAK,IACvBW,EAAQ,UAHZ,SAME,qBACEI,MAAM,KACNS,OAAO,KACPC,QAAQ,YACRC,MAAM,6BAJR,SAME,oBAAGC,OAAO,UAAUC,KAAK,OAAOC,SAAS,UAAzC,UACE,sBACEC,EAAE,gDACFC,YAAY,MACZJ,OAAO,UACPC,KAAK,SAEP,sBACEA,KAAK,UACLE,EAAE,yBACFH,OAAO,6BCeVK,MAnGf,YAA+C,IAA5BxC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,aACtBO,EAAOY,cAAPZ,GACFA,EAAK,KAAIA,EAAK,GACdA,EAAK,IAAGA,EAAK,IACjB,MAAoEM,EAAKN,GAAjEiC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,QAASjC,EAA9B,EAA8BA,KAAMC,EAApC,EAAoCA,OAAQiC,EAA5C,EAA4CA,YAAaC,EAAzD,EAAyDA,OACzD,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAa9B,EAAb,KAQA,OALE+B,SAASC,KAAKvB,MAAME,SADlBiB,EAC6B,QAEA,SAI/B,qCACE,sBACEnC,UAAWmC,EAAW,QAAU,aAChC5C,QAAS,WACP6C,GAAY,IAHhB,UAME,wBACE7C,QAAS,WACP6C,GAAY,IAFhB,mBAOA,8BACE,qBAAK5C,IAAKuC,EAASrC,IAAKI,SAG5B,0BAASE,UAAU,UAAnB,UACE,sBACEA,UACW,SAATqC,EACI,eACS,UAATA,EACA,gBACA,UANR,UASE,mCACE,qBAAK7C,IAAKsC,EAAOpC,IAAKI,EAAMF,GAAG,QAC/B,yBACEL,QAAS,WACP6C,GAAY,IAFhB,UAKE,qBACEI,MAAM,+BACN7B,MAAM,KACNS,OAAO,KACPE,MAAM,6BAJR,SAME,mBAAGE,KAAK,UAAUC,SAAS,UAA3B,SACE,sBACEC,EAAE,wPACFF,KAAK,gBAdb,mBAqBF,gCACE,sBAAKxB,UAAU,OAAf,UACE,6BAAKF,IACL,6BAAKC,EAAOD,UAEd,qBAAKN,IAAKO,EAAO0C,MAAO/C,IAAKK,EAAOD,KAAMF,GAAG,iBAGjD,sBACEI,UACW,SAATqC,EACI,eACS,UAATA,EACA,gBACA,UANR,UASE,6BAAKR,IACL,4BAAIG,IACJ,mBAAGU,KAAMT,EAAQU,OAAO,UAAxB,+BApD8B/C,GAyDlC,cAAC,EAAD,CACER,UAAWA,EACXC,aAAcA,EACdkB,QAASA,QCvEFqC,MApBf,WACE,MAAkCV,oBAAS,GAA3C,mBAAO9C,EAAP,KAAkBC,EAAlB,KAEA,OACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAQD,UAAWA,EAAWC,aAAcA,IAC5C,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwD,OAAK,EAACC,KAAK,IAAIC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CACED,KAAK,WACLC,QACE,cAAC,EAAD,CAAS3D,UAAWA,EAAWC,aAAcA,MAGjD,cAAC,IAAD,CAAOyD,KAAK,IAAIC,QAAS,cAAC,EAAD,aCTlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrB,SAASsB,eAAe,SAM1BZ,K","file":"static/js/main.d8524821.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.f8bb14c9.svg\";","import Logo from \"../images/logo.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header({ slideShow, setSlideShow }) {\r\n  return (\r\n    <nav>\r\n      <Link\r\n        to=\"/\"\r\n        onClick={() => {\r\n          setSlideShow(false);\r\n        }}\r\n      >\r\n        <img src={Logo} alt=\"Logo\" />\r\n      </Link>\r\n      <Link\r\n        to={!slideShow ? \"/art/0\" : \"#\"}\r\n        onClick={() => {\r\n          setSlideShow(!slideShow);\r\n        }}\r\n      >\r\n        <button>{slideShow ? \"Stop\" : \"Start\"} Slideshow</button>\r\n      </Link>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nfunction SingleArt({ id, thumbnail, name, artist }) {\r\n  return (\r\n    <Link to={`/art/${id}`}>\r\n      <div className=\"singleArt\">\r\n        <img src={thumbnail} alt={name} />\r\n        <div className=\"info\">\r\n          <h2>{name}</h2>\r\n          <h3>{artist.name}</h3>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default SingleArt;\r\n","import data from \"../data.json\";\r\nimport SingleArt from \"./SingleArt\";\r\n\r\nfunction Gallery() {\r\n  return (\r\n    <section className=\"gallery\">\r\n      {data.map((art) => {\r\n        return <SingleArt key={art.id} {...art} />;\r\n      })}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Gallery;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nfunction Error() {\r\n  return (\r\n    <section className=\"error\">\r\n      <h1>No Art Here!</h1>\r\n      <Link to=\"/\">Back Home</Link>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Error;\r\n","import { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport data from \"../data.json\";\r\n\r\nfunction Slideshow({ slideShow, setFade }) {\r\n  let { id } = useParams();\r\n  if (id > 14) id = 0;\r\n  if (id < 0) id = 14;\r\n  const { name, artist } = data[id];\r\n  const navigate = useNavigate();\r\n  let width = \"7.142857142857143\" * id;\r\n\r\n  useEffect(() => {\r\n    if (slideShow) {\r\n      const slider = setTimeout(() => {\r\n        navigate(`/art/${+id + 1}`);\r\n      }, 4000);\r\n      return () => clearTimeout(slider);\r\n    }\r\n  }, [slideShow, id, navigate]);\r\n\r\n  return (\r\n    <section className=\"slideShow\">\r\n      <div className=\"line\">\r\n        <div\r\n          style={{\r\n            content: \"\",\r\n            position: \"absolute\",\r\n            background: \"#000\",\r\n            height: \"100%\",\r\n            width: width + \"%\",\r\n          }}\r\n        ></div>\r\n      </div>\r\n      <div>\r\n        <div>\r\n          <h3> {name}</h3>\r\n          <p>{artist.name}</p>\r\n        </div>\r\n        <div>\r\n          <button\r\n            onClick={() => {\r\n              navigate(`/art/${+id - 1}`);\r\n              setFade(\"left\");\r\n            }}\r\n          >\r\n            <svg\r\n              width=\"26\"\r\n              height=\"24\"\r\n              viewBox=\"0 0 26 24\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <g stroke=\"#000000\" fill=\"none\" fillRule=\"evenodd\">\r\n                <path\r\n                  d=\"M24.166 1.843L3.627 12.113l20.539 10.269V1.843z\"\r\n                  strokeWidth=\"2px\"\r\n                  stroke=\"#000000\"\r\n                  fill=\"none\"\r\n                ></path>\r\n                <path\r\n                  fill=\"#D8D8D8\"\r\n                  d=\"M.986.5h-1v22.775h1z\"\r\n                  stroke=\"#000000\"\r\n                ></path>\r\n              </g>\r\n            </svg>\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              navigate(`/art/${+id + 1}`);\r\n              setFade(\"right\");\r\n            }}\r\n          >\r\n            <svg\r\n              width=\"26\"\r\n              height=\"24\"\r\n              viewBox=\"0 0 26 24\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <g stroke=\"#000000\" fill=\"none\" fillRule=\"evenodd\">\r\n                <path\r\n                  d=\"M1.528 1.843l20.538 10.27L1.528 22.382V1.843z\"\r\n                  strokeWidth=\"2px\"\r\n                  stroke=\"#000000\"\r\n                  fill=\"none\"\r\n                ></path>\r\n                <path\r\n                  fill=\"#D8D8D8\"\r\n                  d=\"M24.708.5h1v22.775h-1z\"\r\n                  stroke=\"#000000\"\r\n                ></path>\r\n              </g>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Slideshow;\r\n","import { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport data from \"../data.json\";\r\nimport Slideshow from \"./Slideshow\";\r\n\r\nfunction ArtPage({ slideShow, setSlideShow }) {\r\n  let { id } = useParams();\r\n  if (id > 14) id = 0;\r\n  if (id < 0) id = 14;\r\n  const { year, large, gallery, name, artist, description, source } = data[id];\r\n  const [isOpened, setIsOpened] = useState(false);\r\n  const [fade, setFade] = useState(\"\");\r\n\r\n  if (isOpened) {\r\n    document.body.style.position = \"fixed\";\r\n  } else {\r\n    document.body.style.position = \"static\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={isOpened ? \"large\" : \"large hide\"}\r\n        onClick={() => {\r\n          setIsOpened(false);\r\n        }}\r\n      >\r\n        <button\r\n          onClick={() => {\r\n            setIsOpened(false);\r\n          }}\r\n        >\r\n          CLOSE\r\n        </button>\r\n        <div>\r\n          <img src={gallery} alt={name} />\r\n        </div>\r\n      </div>\r\n      <section className=\"artPage\" key={id}>\r\n        <div\r\n          className={\r\n            fade === \"left\"\r\n              ? \"picture left\"\r\n              : fade === \"right\"\r\n              ? \"picture right\"\r\n              : \"picture\"\r\n          }\r\n        >\r\n          <figure>\r\n            <img src={large} alt={name} id=\"art\" />\r\n            <button\r\n              onClick={() => {\r\n                setIsOpened(true);\r\n              }}\r\n            >\r\n              <svg\r\n                xlink=\"http://www.w3.org/1999/xlink\"\r\n                width=\"12\"\r\n                height=\"12\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <g fill=\"#FFFFFF\" fillRule=\"nonzero\">\r\n                  <path\r\n                    d=\"M7.714 0l1.5 1.5-2.357 2.357 1.286 1.286L10.5 2.786l1.5 1.5V0zM3.857 6.857L1.5 9.214 0 7.714V12h4.286l-1.5-1.5 2.357-2.357zM8.143 6.857L6.857 8.143 9.214 10.5l-1.5 1.5H12V7.714l-1.5 1.5zM4.286 0H0v4.286l1.5-1.5 2.357 2.357 1.286-1.286L2.786 1.5z\"\r\n                    fill=\"#FFFFFF\"\r\n                  ></path>\r\n                </g>\r\n              </svg>\r\n              VIEW IMAGE\r\n            </button>\r\n          </figure>\r\n          <div>\r\n            <div className=\"name\">\r\n              <h1>{name}</h1>\r\n              <h2>{artist.name}</h2>\r\n            </div>\r\n            <img src={artist.image} alt={artist.name} id=\"artist\" />\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={\r\n            fade === \"left\"\r\n              ? \"artInfo left\"\r\n              : fade === \"right\"\r\n              ? \"artInfo right\"\r\n              : \"artInfo\"\r\n          }\r\n        >\r\n          <h1>{year}</h1>\r\n          <p>{description}</p>\r\n          <a href={source} target=\"__blank\">\r\n            Go to Source\r\n          </a>\r\n        </div>\r\n      </section>\r\n      <Slideshow\r\n        slideShow={slideShow}\r\n        setSlideShow={setSlideShow}\r\n        setFade={setFade}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ArtPage;\r\n","import { HashRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Gallery from \"./components/Gallery\";\nimport Error from \"./components/Error\";\nimport ArtPage from \"./components/ArtPage\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [slideShow, setSlideShow] = useState(false);\n\n  return (\n    <Router>\n      <Header slideShow={slideShow} setSlideShow={setSlideShow} />\n      <Routes>\n        <Route exact path=\"/\" element={<Gallery />} />\n        <Route\n          path=\"/art/:id\"\n          element={\n            <ArtPage slideShow={slideShow} setSlideShow={setSlideShow} />\n          }\n        />\n        <Route path=\"*\" element={<Error />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}